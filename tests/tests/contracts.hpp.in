#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {
    static std::vector<uint8_t> bank_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/../../build/bankofstaked.wasm"); }
    static std::vector<char>    bank_abi() { return read_abi("${CMAKE_SOURCE_DIR}/../../build/bankofstaked.abi"); }

    static std::vector<uint8_t> token_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/eosio.token/eosio.token.wasm"); }
    static std::vector<char>    token_abi() { return read_abi("${CMAKE_SOURCE_DIR}/test_contracts/eosio.token/eosio.token.abi"); }
    static std::vector<uint8_t> system_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/eosio.system/eosio.system.wasm"); }
    static std::vector<char>    system_abi() { return read_abi("${CMAKE_SOURCE_DIR}/test_contracts/eosio.system/eosio.system.abi"); }
    static std::vector<uint8_t> msig_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/eosio.msig/eosio.msig.wasm"); }
    static std::vector<char>    msig_abi() { return read_abi("${CMAKE_SOURCE_DIR}/test_contracts/eosio.msig/eosio.msig.abi"); }
};
}} //ns eosio::testing
